//
//  ListAritclesInteractor.swift
//  Assessment
//
//  Created Heema Boss on 5/26/20.
//  Copyright © 2020 Ibraheem. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ListAritclesInteractor: ListAritclesInteractorProtocol {
    
    weak var presenter: ListAritclesPresenterProtocol?
    lazy private var remoteContext = RemoteContext(baseURL: baseUrl)
    
    func getListAritcles(){
        
        let endpoint = EndPoint(address: ApiEndPoints.emailed, httpMethod: .get, headers: getHeaders())
        remoteContext.request(endPoint: endpoint, parameters: nil) { [weak self] (result) in
            guard let self = self else {return}
            switch result {
            case .success(let data):
                let decoder = JSONDecoder()
                do{
                    let model = try decoder.decode(AritclesEntity.self, from: data as! Data)
                    self.presenter?.aritclesLoaded(aritcles: model)
                }catch let error{
                    self.presenter?.aritclesLoadingError(error: error.localizedDescription)
                }
            case .failure(let error):
                self.presenter?.aritclesLoadingError(error: error.localizedDescription)
            }
        }
    }
}
